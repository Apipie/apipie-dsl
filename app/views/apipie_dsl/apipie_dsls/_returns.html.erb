<% level ||= 0 %>
<% col = 255 - level * 5 %>
<% if return_object[:class] == Hash && return_object[:data] && return_object[:data].is_a?(Enumerable) %>
  <% return_object[:data].each do |param| %>
    <% if !param[:show] %>
      <%= render(:partial => 'params', :locals => {:level => level, :params => param[:params]}) unless param[:params].blank? %>
      <% next %>
    <% end %>
    <tr style='background-color:rgb(<%= "#{col},#{col},#{col}" %>);'>
      <td>
        <strong><%= param[:full_name] %> </strong><br>
        <small>
          <%=  t("apipie_dsl.#{param[:type]}") %>
        </small>
      </td>
      <td>
        <%= param[:description].html_safe %>
        <%- if param[:validations].present? || param[:validator].present? %>
          <p><strong>Validations:</strong></p>
          <ul>
            <%- if param[:validator].present? %>
              <li><%= ApipieDSL.markup_to_html(param[:validator]).html_safe %></li>
            <%- end %>
            <%- if param[:validations].present? %>
              <%- param[:validations].each do |item| %>
                <li><%= item.html_safe %></li>
              <%- end %>
            <%- end %>
          </ul>
        <%- end %>

        <% unless param[:metadata].blank? %>
          <br>
          Metadata:
          <%= render(:partial => 'metadata', :locals => {:meta => param[:metadata]}) %>
        <% end %>
      </td>

    </tr>

    <%= render(:partial => 'params', :locals => {:level => level + 1, :params => param[:params]}) unless param[:params].blank? %>
  <% end %>
<% else %>
  <tr style='background-color:rgb(<%= "#{col},#{col},#{col}" %>);'>
    <td>
      <strong><%= return_object[:meta] %> </strong><br>
    </td>
    <td>
      <% klass = return_object[:data].blank? ? return_object[:class] : return_object[:data] %>
      <%= raw class_reference(klass, current_version(@doc[:classes]), @doc[:link_extension]) %>
    </td>
  </tr>
<% end %>
